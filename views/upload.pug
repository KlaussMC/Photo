extends layout

block content

	section#newAlbum
		input(type="text", placeholder="Album Name")#name
		#cont
			//- #private
			label(for="private") Make Album Private
			input(type="checkbox", checked)#private

	select(onchange="window.vars.setAlbum(this)")#album
		each item in albums
			option=item
		option New Album

	br

	input(type="file", accept="image/*", name="image", multiple="", required)#file

	script (function(){window.vars = window.vars || {};})()

	script.
		window.vars.moveProgressBar = function(percentage) {
			document.querySelector("#progressBarInner").style.width = percentage + "%";
		}

	script.
		function handleFileSelect(evt) {
			var files = evt.target.files;

			window.vars.moveProgressBar(25);

			for (var i = 0, f; f = files[i]; i++) {

				var reader = new FileReader();

				reader.onload = (function(f, reader) {
					return function() {
						var contents = reader.result;

						var obj = { name: f.name, cont: contents }

						//- console.log(contents);
						var xhr = new XMLHttpRequest()
						xhr.open('post', '/dashboard', true)
						xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')
						xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
						
						try {
							xhr.send(JSON.stringify(obj));
						} catch (e) {
							alert("The file you have sent is too large.")
						}

						xhr.onreadystatechange = function () {
							window.vars.moveProgressBar(xhr.readyState * 25)
						}
					}

				})(f, reader);

				reader.readAsText(f);
			}
		}
		document.querySelector('#file').addEventListener('change', handleFileSelect, false);


	.progressBar
		div.inner#progressBarInner

	script window.addEventListener('load', e => { window.vars.progressBar = document.querySelector(".inner") } );

	script window.vars.setAlbum = function(album) { if (album.innerHTML == "New Album") { window.vars.newAlbum() } }

	script window.vars.newAlbum = function() { document.querySelector("#newAlbum").style.display="block"; }
